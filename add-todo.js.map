{"version":3,"file":"add-todo.js","sourceRoot":"","sources":["src/add-todo.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAC,MAAM,gBAAgB,CAAC;AAG9D,IAAa,OAAO,GAApB,MAAa,OAAQ,SAAQ,UAAU;IAMrC,MAAM;QACJ,OAAO,IAAI,CAAA;;;2BAGY,GAAG,EAAE;YACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;YACnC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC;QAC7B,CAAC;;KAEN,CAAA;IACH,CAAC;CACF,CAAA;AAf8B;IAA5B,QAAQ,CAAC,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC;wCAAyC;AAEjD;IAAnB,KAAK,CAAC,WAAW,CAAC;2CAAuC;AAJ/C,OAAO;IADnB,aAAa,CAAC,UAAU,CAAC;GACb,OAAO,CAiBnB;SAjBY,OAAO","sourcesContent":["import {LitElement, html} from 'lit';\nimport {customElement, property, query} from 'lit/decorators';\n\n@customElement('add-todo')\nexport class AddTodo extends LitElement {\n\n  @property({attribute: true}) public addTodo!: (arg0: string) => void;\n\n  @query('#add-todo') private _todoInput!: HTMLInputElement;\n\n  render() {\n    return html`\n      <div>\n          <input type=\"text\" id=\"add-todo\" />\n          <button @click=${() => {\n            this.addTodo(this._todoInput.value)\n            this._todoInput.value = '';\n          }} type=\"submit\">Add Todo</button>\n        </div>\n    `\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'add-todo': AddTodo;\n  }\n}"]}